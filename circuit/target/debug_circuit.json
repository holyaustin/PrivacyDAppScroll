{"debug_symbols":[{"locations":{"160":[{"span":{"start":420,"end":485},"file":0}],"161":[{"span":{"start":498,"end":513},"file":0}],"162":[{"span":{"start":660,"end":680},"file":0},{"span":{"start":1282,"end":1349},"file":2}],"163":[{"span":{"start":660,"end":680},"file":0},{"span":{"start":1380,"end":1413},"file":2}],"164":[{"span":{"start":660,"end":680},"file":0},{"span":{"start":1380,"end":1413},"file":2}],"165":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":529,"end":555},"file":28},{"span":{"start":122,"end":149},"file":18}],"166":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":529,"end":555},"file":28},{"span":{"start":122,"end":149},"file":18}],"167":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":529,"end":555},"file":28},{"span":{"start":122,"end":149},"file":18}],"168":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":529,"end":555},"file":28},{"span":{"start":122,"end":149},"file":18}],"169":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"170":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"171":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"172":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"173":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"174":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"175":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"176":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"177":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"178":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"179":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"180":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"181":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"182":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"183":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"184":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"185":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"186":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"187":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"188":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"189":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"190":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"191":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"192":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"193":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"194":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"195":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"196":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":716,"end":728},"file":28}],"197":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"198":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"199":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"200":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"201":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"202":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"203":[{"span":{"start":761,"end":817},"file":0},{"span":{"start":821,"end":872},"file":28},{"span":{"start":755,"end":793},"file":26}],"204":[{"span":{"start":832,"end":852},"file":0}],"162.13":[{"span":{"start":2647,"end":2648},"file":3}],"162.14":[{"span":{"start":2647,"end":2648},"file":3}],"162.15":[{"span":{"start":2647,"end":2648},"file":3}],"162.16":[{"span":{"start":2647,"end":2648},"file":3}],"162.17":[{"span":{"start":2647,"end":2648},"file":3}],"162.18":[{"span":{"start":2647,"end":2648},"file":3}],"162.19":[{"span":{"start":2647,"end":2648},"file":3}],"162.20":[{"span":{"start":2647,"end":2648},"file":3}],"162.21":[{"span":{"start":2647,"end":2648},"file":3}],"162.22":[{"span":{"start":2647,"end":2648},"file":3}],"162.23":[{"span":{"start":2647,"end":2648},"file":3}],"162.24":[{"span":{"start":2647,"end":2648},"file":3}],"162.25":[{"span":{"start":2647,"end":2648},"file":3}],"162.26":[{"span":{"start":2647,"end":2648},"file":3}],"162.27":[{"span":{"start":2647,"end":2648},"file":3}],"162.28":[{"span":{"start":2647,"end":2648},"file":3}],"162.29":[{"span":{"start":2647,"end":2648},"file":3}],"162.30":[{"span":{"start":2647,"end":2648},"file":3}],"162.31":[{"span":{"start":2647,"end":2648},"file":3}],"162.32":[{"span":{"start":2647,"end":2648},"file":3}],"162.33":[{"span":{"start":2647,"end":2648},"file":3}],"162.34":[{"span":{"start":2647,"end":2648},"file":3}],"162.35":[{"span":{"start":2647,"end":2648},"file":3}],"162.36":[{"span":{"start":2647,"end":2648},"file":3}],"162.37":[{"span":{"start":2647,"end":2648},"file":3}],"162.38":[{"span":{"start":2647,"end":2648},"file":3}],"162.39":[{"span":{"start":2647,"end":2648},"file":3}],"162.40":[{"span":{"start":2647,"end":2648},"file":3}],"162.41":[{"span":{"start":2647,"end":2648},"file":3}],"162.42":[{"span":{"start":2647,"end":2648},"file":3}],"162.43":[{"span":{"start":2647,"end":2648},"file":3}],"162.44":[{"span":{"start":2647,"end":2648},"file":3}],"162.45":[{"span":{"start":2647,"end":2648},"file":3}],"162.46":[{"span":{"start":2647,"end":2648},"file":3}],"162.47":[{"span":{"start":2647,"end":2648},"file":3}],"162.48":[{"span":{"start":2647,"end":2648},"file":3}],"162.49":[{"span":{"start":2647,"end":2648},"file":3}],"162.50":[{"span":{"start":2647,"end":2648},"file":3}],"162.51":[{"span":{"start":2647,"end":2648},"file":3}],"162.52":[{"span":{"start":2647,"end":2648},"file":3}],"162.53":[{"span":{"start":2647,"end":2648},"file":3}],"162.54":[{"span":{"start":2647,"end":2648},"file":3}],"162.55":[{"span":{"start":2647,"end":2648},"file":3}],"162.56":[{"span":{"start":2647,"end":2648},"file":3}],"162.57":[{"span":{"start":2647,"end":2648},"file":3}],"162.58":[{"span":{"start":2647,"end":2648},"file":3}],"162.59":[{"span":{"start":2647,"end":2648},"file":3}],"162.60":[{"span":{"start":2647,"end":2648},"file":3}],"162.61":[{"span":{"start":2647,"end":2648},"file":3}],"162.62":[{"span":{"start":2647,"end":2648},"file":3}],"162.63":[{"span":{"start":2647,"end":2648},"file":3}],"162.64":[{"span":{"start":2647,"end":2648},"file":3}],"162.65":[{"span":{"start":2647,"end":2648},"file":3}],"162.66":[{"span":{"start":2647,"end":2648},"file":3}],"162.67":[{"span":{"start":2647,"end":2648},"file":3}],"162.68":[{"span":{"start":2647,"end":2648},"file":3}],"162.69":[{"span":{"start":2647,"end":2648},"file":3}],"162.70":[{"span":{"start":2647,"end":2648},"file":3}],"162.71":[{"span":{"start":2647,"end":2648},"file":3}],"162.72":[{"span":{"start":2647,"end":2648},"file":3}],"162.73":[{"span":{"start":2647,"end":2648},"file":3}],"162.74":[{"span":{"start":2647,"end":2648},"file":3}],"162.75":[{"span":{"start":2647,"end":2648},"file":3}],"162.76":[{"span":{"start":2647,"end":2648},"file":3}],"162.77":[{"span":{"start":2647,"end":2648},"file":3}],"162.78":[{"span":{"start":2647,"end":2648},"file":3}],"162.79":[{"span":{"start":2647,"end":2648},"file":3}],"162.80":[{"span":{"start":2647,"end":2648},"file":3}],"162.81":[{"span":{"start":2647,"end":2648},"file":3}],"162.82":[{"span":{"start":2647,"end":2648},"file":3}],"162.83":[{"span":{"start":2647,"end":2648},"file":3}],"162.84":[{"span":{"start":2647,"end":2648},"file":3}],"162.85":[{"span":{"start":2647,"end":2648},"file":3}],"162.86":[{"span":{"start":2647,"end":2648},"file":3}],"162.87":[{"span":{"start":2647,"end":2648},"file":3}],"162.88":[{"span":{"start":2647,"end":2648},"file":3}],"162.89":[{"span":{"start":2647,"end":2648},"file":3}],"162.90":[{"span":{"start":2647,"end":2648},"file":3}],"162.91":[{"span":{"start":2647,"end":2648},"file":3}],"162.92":[{"span":{"start":2647,"end":2648},"file":3}],"162.93":[{"span":{"start":2647,"end":2648},"file":3}],"162.94":[{"span":{"start":2647,"end":2648},"file":3}],"162.95":[{"span":{"start":2647,"end":2648},"file":3}],"162.96":[{"span":{"start":2647,"end":2648},"file":3}],"162.97":[{"span":{"start":2647,"end":2648},"file":3}],"162.98":[{"span":{"start":2647,"end":2648},"file":3}],"162.99":[{"span":{"start":2647,"end":2648},"file":3}],"162.100":[{"span":{"start":2647,"end":2648},"file":3}],"162.101":[{"span":{"start":2647,"end":2648},"file":3}],"162.102":[{"span":{"start":2647,"end":2648},"file":3}],"162.103":[{"span":{"start":2647,"end":2648},"file":3}],"162.104":[{"span":{"start":2647,"end":2648},"file":3}],"162.105":[{"span":{"start":2647,"end":2648},"file":3}],"162.106":[{"span":{"start":2647,"end":2648},"file":3}],"162.107":[{"span":{"start":2647,"end":2648},"file":3}],"162.108":[{"span":{"start":2647,"end":2648},"file":3}],"162.109":[{"span":{"start":2647,"end":2648},"file":3}],"162.110":[{"span":{"start":2647,"end":2648},"file":3}],"162.111":[{"span":{"start":2647,"end":2648},"file":3}],"162.112":[{"span":{"start":2647,"end":2648},"file":3}],"162.113":[{"span":{"start":2647,"end":2648},"file":3}],"162.114":[{"span":{"start":2647,"end":2648},"file":3}],"162.115":[{"span":{"start":2647,"end":2648},"file":3}],"162.116":[{"span":{"start":2647,"end":2648},"file":3}],"162.117":[{"span":{"start":2647,"end":2648},"file":3}],"162.118":[{"span":{"start":2647,"end":2648},"file":3}],"162.119":[{"span":{"start":2647,"end":2648},"file":3}],"162.120":[{"span":{"start":2647,"end":2648},"file":3}],"162.121":[{"span":{"start":2647,"end":2648},"file":3}],"162.122":[{"span":{"start":2647,"end":2648},"file":3}],"162.123":[{"span":{"start":2647,"end":2648},"file":3}],"162.124":[{"span":{"start":2647,"end":2648},"file":3}],"162.125":[{"span":{"start":2647,"end":2648},"file":3}],"162.126":[{"span":{"start":2647,"end":2648},"file":3}],"162.127":[{"span":{"start":2647,"end":2648},"file":3}],"162.128":[{"span":{"start":2647,"end":2648},"file":3}],"162.129":[{"span":{"start":2647,"end":2648},"file":3}],"162.130":[{"span":{"start":2647,"end":2648},"file":3}],"162.131":[{"span":{"start":2647,"end":2648},"file":3}],"162.132":[{"span":{"start":2647,"end":2648},"file":3}],"162.133":[{"span":{"start":2647,"end":2648},"file":3}],"162.134":[{"span":{"start":2647,"end":2648},"file":3}],"162.135":[{"span":{"start":2647,"end":2648},"file":3}],"162.136":[{"span":{"start":2647,"end":2648},"file":3}],"162.137":[{"span":{"start":2647,"end":2648},"file":3}],"162.138":[{"span":{"start":2647,"end":2648},"file":3}],"162.139":[{"span":{"start":2647,"end":2648},"file":3}],"162.140":[{"span":{"start":2647,"end":2648},"file":3}],"162.141":[{"span":{"start":2647,"end":2648},"file":3}],"162.142":[{"span":{"start":2647,"end":2648},"file":3}],"162.143":[{"span":{"start":2647,"end":2648},"file":3}],"162.144":[{"span":{"start":2647,"end":2648},"file":3}],"162.145":[{"span":{"start":2647,"end":2648},"file":3}],"162.146":[{"span":{"start":2647,"end":2648},"file":3}],"162.147":[{"span":{"start":2647,"end":2648},"file":3}],"162.148":[{"span":{"start":2647,"end":2648},"file":3}],"162.149":[{"span":{"start":2647,"end":2648},"file":3}],"162.150":[{"span":{"start":2647,"end":2648},"file":3}],"162.151":[{"span":{"start":2647,"end":2648},"file":3}],"162.152":[{"span":{"start":2647,"end":2648},"file":3}],"162.153":[{"span":{"start":2647,"end":2648},"file":3}],"162.154":[{"span":{"start":2647,"end":2648},"file":3}],"162.155":[{"span":{"start":2647,"end":2648},"file":3}],"162.156":[{"span":{"start":2647,"end":2648},"file":3}],"162.157":[{"span":{"start":2647,"end":2648},"file":3}],"162.158":[{"span":{"start":2647,"end":2648},"file":3}],"162.159":[{"span":{"start":2647,"end":2648},"file":3}],"162.160":[{"span":{"start":2647,"end":2648},"file":3}],"162.161":[{"span":{"start":2647,"end":2648},"file":3}],"162.162":[{"span":{"start":2647,"end":2648},"file":3}],"162.163":[{"span":{"start":2647,"end":2648},"file":3}],"162.164":[{"span":{"start":2647,"end":2648},"file":3}],"162.165":[{"span":{"start":2647,"end":2648},"file":3}],"162.166":[{"span":{"start":2647,"end":2648},"file":3}],"162.167":[{"span":{"start":2647,"end":2648},"file":3}],"162.168":[{"span":{"start":2647,"end":2648},"file":3}],"162.169":[{"span":{"start":2647,"end":2648},"file":3}],"162.170":[{"span":{"start":2647,"end":2648},"file":3}],"162.171":[{"span":{"start":2647,"end":2648},"file":3}],"162.172":[{"span":{"start":2647,"end":2648},"file":3}],"162.173":[{"span":{"start":2647,"end":2648},"file":3}],"162.174":[{"span":{"start":2647,"end":2648},"file":3}],"162.175":[{"span":{"start":2647,"end":2648},"file":3}],"162.176":[{"span":{"start":2647,"end":2648},"file":3}],"162.177":[{"span":{"start":2647,"end":2648},"file":3}],"162.178":[{"span":{"start":2647,"end":2648},"file":3}],"162.179":[{"span":{"start":2647,"end":2648},"file":3}],"162.180":[{"span":{"start":2647,"end":2648},"file":3}],"162.181":[{"span":{"start":2647,"end":2648},"file":3}],"162.182":[{"span":{"start":2647,"end":2648},"file":3}],"162.183":[{"span":{"start":2647,"end":2648},"file":3}],"162.184":[{"span":{"start":2647,"end":2648},"file":3}],"162.185":[{"span":{"start":2647,"end":2648},"file":3}],"162.186":[{"span":{"start":2647,"end":2648},"file":3}],"162.187":[{"span":{"start":2647,"end":2648},"file":3}],"162.188":[{"span":{"start":2647,"end":2648},"file":3}],"162.189":[{"span":{"start":2647,"end":2648},"file":3}],"162.190":[{"span":{"start":2647,"end":2648},"file":3}],"162.191":[{"span":{"start":2647,"end":2648},"file":3}],"162.192":[{"span":{"start":2647,"end":2648},"file":3}],"162.193":[{"span":{"start":2647,"end":2648},"file":3}],"162.194":[{"span":{"start":2647,"end":2648},"file":3}],"162.195":[{"span":{"start":2647,"end":2648},"file":3}],"162.196":[{"span":{"start":2647,"end":2648},"file":3}],"162.197":[{"span":{"start":2647,"end":2648},"file":3}],"162.198":[{"span":{"start":2647,"end":2648},"file":3}],"162.199":[{"span":{"start":2647,"end":2648},"file":3}],"162.200":[{"span":{"start":2647,"end":2648},"file":3}],"162.201":[{"span":{"start":2647,"end":2648},"file":3}],"162.202":[{"span":{"start":2647,"end":2648},"file":3}],"162.203":[{"span":{"start":2647,"end":2648},"file":3}],"162.204":[{"span":{"start":2647,"end":2648},"file":3}],"162.205":[{"span":{"start":2647,"end":2648},"file":3}],"162.206":[{"span":{"start":2647,"end":2648},"file":3}],"162.207":[{"span":{"start":2647,"end":2648},"file":3}],"162.208":[{"span":{"start":2647,"end":2648},"file":3}],"162.209":[{"span":{"start":2647,"end":2648},"file":3}],"162.210":[{"span":{"start":2647,"end":2648},"file":3}],"162.211":[{"span":{"start":2647,"end":2648},"file":3}],"162.212":[{"span":{"start":2647,"end":2648},"file":3}],"162.213":[{"span":{"start":2647,"end":2648},"file":3}],"162.214":[{"span":{"start":2647,"end":2648},"file":3}],"162.215":[{"span":{"start":2647,"end":2648},"file":3}],"162.216":[{"span":{"start":2647,"end":2648},"file":3}],"162.217":[{"span":{"start":2647,"end":2648},"file":3}],"162.218":[{"span":{"start":2647,"end":2648},"file":3}],"162.219":[{"span":{"start":2647,"end":2648},"file":3}],"162.220":[{"span":{"start":2647,"end":2648},"file":3}],"162.221":[{"span":{"start":2647,"end":2648},"file":3}],"162.222":[{"span":{"start":2647,"end":2648},"file":3}],"162.223":[{"span":{"start":2647,"end":2648},"file":3}],"162.224":[{"span":{"start":2647,"end":2648},"file":3}],"162.225":[{"span":{"start":2647,"end":2648},"file":3}],"162.226":[{"span":{"start":2647,"end":2648},"file":3}],"162.227":[{"span":{"start":2647,"end":2648},"file":3}],"162.228":[{"span":{"start":2647,"end":2648},"file":3}],"162.229":[{"span":{"start":2647,"end":2648},"file":3}],"162.230":[{"span":{"start":2647,"end":2648},"file":3}],"162.231":[{"span":{"start":2647,"end":2648},"file":3}],"162.232":[{"span":{"start":2647,"end":2648},"file":3}],"162.233":[{"span":{"start":2647,"end":2648},"file":3}],"162.234":[{"span":{"start":2647,"end":2648},"file":3}],"162.235":[{"span":{"start":2647,"end":2648},"file":3}],"162.236":[{"span":{"start":2647,"end":2648},"file":3}],"162.237":[{"span":{"start":2647,"end":2648},"file":3}],"162.238":[{"span":{"start":2647,"end":2648},"file":3}],"162.239":[{"span":{"start":2647,"end":2648},"file":3}],"162.240":[{"span":{"start":2647,"end":2648},"file":3}],"162.241":[{"span":{"start":2647,"end":2648},"file":3}],"162.242":[{"span":{"start":2647,"end":2648},"file":3}],"162.243":[{"span":{"start":2647,"end":2648},"file":3}],"162.244":[{"span":{"start":2647,"end":2648},"file":3}],"162.245":[{"span":{"start":2647,"end":2648},"file":3}],"162.246":[{"span":{"start":2647,"end":2648},"file":3}],"162.247":[{"span":{"start":2647,"end":2648},"file":3}],"162.248":[{"span":{"start":2647,"end":2648},"file":3}],"162.249":[{"span":{"start":2647,"end":2648},"file":3}],"162.250":[{"span":{"start":2647,"end":2648},"file":3}],"162.251":[{"span":{"start":2647,"end":2648},"file":3}],"162.252":[{"span":{"start":2647,"end":2648},"file":3}],"162.253":[{"span":{"start":2647,"end":2648},"file":3}],"162.254":[{"span":{"start":2647,"end":2648},"file":3}],"162.255":[{"span":{"start":2647,"end":2648},"file":3}],"162.256":[{"span":{"start":2647,"end":2648},"file":3}],"162.257":[{"span":{"start":2647,"end":2648},"file":3}],"162.258":[{"span":{"start":2647,"end":2648},"file":3}],"162.259":[{"span":{"start":2647,"end":2648},"file":3}],"162.260":[{"span":{"start":2647,"end":2648},"file":3}],"162.261":[{"span":{"start":2647,"end":2648},"file":3}],"162.262":[{"span":{"start":2647,"end":2648},"file":3}],"162.263":[{"span":{"start":2647,"end":2648},"file":3}],"162.264":[{"span":{"start":2647,"end":2648},"file":3}],"162.265":[{"span":{"start":2647,"end":2648},"file":3}],"162.266":[{"span":{"start":2647,"end":2648},"file":3}],"162.267":[{"span":{"start":2647,"end":2648},"file":3}],"162.268":[{"span":{"start":2647,"end":2648},"file":3}],"162.269":[{"span":{"start":2647,"end":2648},"file":3}],"162.270":[{"span":{"start":2647,"end":2648},"file":3}],"162.271":[{"span":{"start":2647,"end":2648},"file":3}],"162.272":[{"span":{"start":2647,"end":2648},"file":3}],"162.273":[{"span":{"start":2647,"end":2648},"file":3}],"162.274":[{"span":{"start":2647,"end":2648},"file":3}],"162.275":[{"span":{"start":2647,"end":2648},"file":3}],"162.276":[{"span":{"start":2647,"end":2648},"file":3}],"162.277":[{"span":{"start":2647,"end":2648},"file":3}],"162.278":[{"span":{"start":2647,"end":2648},"file":3}],"162.279":[{"span":{"start":2647,"end":2648},"file":3}],"162.280":[{"span":{"start":2647,"end":2648},"file":3}],"162.281":[{"span":{"start":2647,"end":2648},"file":3}],"162.282":[{"span":{"start":2647,"end":2648},"file":3}],"162.286":[{"span":{"start":2672,"end":2674},"file":3}],"162.287":[{"span":{"start":2672,"end":2674},"file":3}],"162.293":[{"span":{"start":2731,"end":2733},"file":3}],"162.294":[{"span":{"start":2731,"end":2733},"file":3}],"162.297":[{"span":{"start":2753,"end":2759},"file":3}],"162.298":[{"span":{"start":2753,"end":2759},"file":3}],"162.299":[{"span":{"start":2753,"end":2759},"file":3}],"162.300":[{"span":{"start":2753,"end":2759},"file":3}],"162.301":[{"span":{"start":2753,"end":2759},"file":3}],"162.307":[{"span":{"start":2731,"end":2733},"file":3}],"162.308":[{"span":{"start":2731,"end":2733},"file":3}],"162.309":[{"span":{"start":2731,"end":2733},"file":3}],"162.310":[{"span":{"start":2731,"end":2733},"file":3}],"162.311":[{"span":{"start":2731,"end":2733},"file":3}],"162.312":[{"span":{"start":2753,"end":2759},"file":3}],"162.313":[{"span":{"start":2753,"end":2759},"file":3}],"162.314":[{"span":{"start":2753,"end":2759},"file":3}],"162.315":[{"span":{"start":2753,"end":2759},"file":3}],"162.316":[{"span":{"start":2753,"end":2759},"file":3}],"162.317":[{"span":{"start":2753,"end":2759},"file":3}],"162.318":[{"span":{"start":2763,"end":2771},"file":3}],"162.319":[{"span":{"start":2763,"end":2771},"file":3}],"162.320":[{"span":{"start":2753,"end":2759},"file":3}],"162.321":[{"span":{"start":2753,"end":2759},"file":3}],"162.322":[{"span":{"start":2753,"end":2759},"file":3}],"162.323":[{"span":{"start":2753,"end":2759},"file":3}],"162.324":[{"span":{"start":2753,"end":2759},"file":3}],"162.325":[{"span":{"start":2753,"end":2759},"file":3}],"162.326":[{"span":{"start":2753,"end":2759},"file":3}],"162.327":[{"span":{"start":2753,"end":2759},"file":3}],"162.328":[{"span":{"start":2753,"end":2759},"file":3}],"162.329":[{"span":{"start":2753,"end":2759},"file":3}],"162.330":[{"span":{"start":2753,"end":2759},"file":3}],"162.331":[{"span":{"start":2753,"end":2759},"file":3}],"162.332":[{"span":{"start":2753,"end":2759},"file":3}],"162.333":[{"span":{"start":2753,"end":2759},"file":3}],"162.334":[{"span":{"start":2753,"end":2759},"file":3}],"162.335":[{"span":{"start":2753,"end":2759},"file":3}],"162.336":[{"span":{"start":2753,"end":2759},"file":3}],"162.337":[{"span":{"start":2753,"end":2759},"file":3}],"162.338":[{"span":{"start":2753,"end":2759},"file":3}],"162.339":[{"span":{"start":2753,"end":2759},"file":3}],"162.340":[{"span":{"start":2753,"end":2759},"file":3}],"162.341":[{"span":{"start":2753,"end":2759},"file":3}],"162.342":[{"span":{"start":2753,"end":2759},"file":3}],"162.343":[{"span":{"start":2753,"end":2759},"file":3}],"162.344":[{"span":{"start":2753,"end":2759},"file":3}],"162.345":[{"span":{"start":2753,"end":2759},"file":3}],"162.346":[{"span":{"start":2753,"end":2759},"file":3}],"162.347":[{"span":{"start":2753,"end":2759},"file":3}],"162.348":[{"span":{"start":2753,"end":2759},"file":3}],"162.349":[{"span":{"start":2753,"end":2759},"file":3}],"162.350":[{"span":{"start":2753,"end":2759},"file":3}],"162.351":[{"span":{"start":2753,"end":2759},"file":3}],"162.354":[{"span":{"start":2672,"end":2674},"file":3}],"162.355":[{"span":{"start":2672,"end":2674},"file":3}],"162.356":[{"span":{"start":2672,"end":2674},"file":3}],"162.357":[{"span":{"start":2672,"end":2674},"file":3}],"162.358":[{"span":{"start":2672,"end":2674},"file":3}],"162.359":[{"span":{"start":2699,"end":2707},"file":3}],"162.360":[{"span":{"start":2699,"end":2707},"file":3}],"162.361":[{"span":{"start":2694,"end":2695},"file":3}],"162.362":[{"span":{"start":2694,"end":2695},"file":3}],"162.363":[{"span":{"start":2694,"end":2695},"file":3}],"162.364":[{"span":{"start":2694,"end":2695},"file":3}],"162.365":[{"span":{"start":2694,"end":2695},"file":3}],"162.366":[{"span":{"start":2694,"end":2695},"file":3}],"162.367":[{"span":{"start":2694,"end":2695},"file":3}],"162.368":[{"span":{"start":2694,"end":2695},"file":3}],"162.369":[{"span":{"start":2694,"end":2695},"file":3}],"162.370":[{"span":{"start":2694,"end":2695},"file":3}],"162.371":[{"span":{"start":2694,"end":2695},"file":3}],"162.372":[{"span":{"start":2694,"end":2695},"file":3}],"162.373":[{"span":{"start":2694,"end":2695},"file":3}],"162.374":[{"span":{"start":2694,"end":2695},"file":3}],"162.375":[{"span":{"start":2694,"end":2695},"file":3}],"162.376":[{"span":{"start":2694,"end":2695},"file":3}],"162.377":[{"span":{"start":2694,"end":2695},"file":3}],"162.378":[{"span":{"start":2694,"end":2695},"file":3}],"162.379":[{"span":{"start":2694,"end":2695},"file":3}],"162.380":[{"span":{"start":2694,"end":2695},"file":3}],"162.381":[{"span":{"start":2694,"end":2695},"file":3}],"162.382":[{"span":{"start":2694,"end":2695},"file":3}],"162.383":[{"span":{"start":2694,"end":2695},"file":3}],"162.384":[{"span":{"start":2694,"end":2695},"file":3}],"162.385":[{"span":{"start":2694,"end":2695},"file":3}],"162.386":[{"span":{"start":2694,"end":2695},"file":3}],"162.387":[{"span":{"start":2694,"end":2695},"file":3}],"162.388":[{"span":{"start":2694,"end":2695},"file":3}],"162.389":[{"span":{"start":2694,"end":2695},"file":3}],"162.390":[{"span":{"start":2694,"end":2695},"file":3}],"162.391":[{"span":{"start":2694,"end":2695},"file":3}],"162.392":[{"span":{"start":2694,"end":2695},"file":3}]}}],"file_map":{"0":{"source":"use dep::std::ecdsa_secp256k1::verify_signature;\nuse dep::std;\nuse dep::std::scalar_mul;\nuse dep::std::hash;\nuse dep::ecrecover;\n\nfn main(\n  pub_key_x: [u8; 32],\n  pub_key_y: [u8; 32],\n  signature: [u8; 64],\n  hashed_message: pub [u8; 32],\n  root: pub Field,\n  index: Field,\n  hash_path: [Field; 2]\n) {\n    // First, let's check if signature is vaild and corresponds to the public key provided\n    let valid_signature = verify_signature(pub_key_x, pub_key_y, signature, hashed_message);\n    assert(valid_signature);\n\n    // Grab the ethereum address from the public key\n    let key = ecrecover::secp256k1::PubKey::from_xy(pub_key_x, pub_key_y);\n    let leaf = key.to_eth_address();\n\n    // Check if the address is part of the merkle tree\n    let computedRoot = std::merkle::compute_merkle_root(leaf, index, hash_path);\n\n    assert (root == computedRoot);\n}","path":"/home/turupawn/Projects/EcrecoverInclusionProof/circuit/src/main.nr"},"2":{"source":"use dep::std;\n\nuse dep::array_helpers;\n\nstruct PubKey {\n    pub_x: [u8; 32],\n    pub_y: [u8; 32],\n}\n\nunconstrained\nfn split_uncompressed_pub_key(\n    pub_key: [u8; 65]\n) -> ([u8; 32], [u8; 32]) {\n    let mut pub_key_x: [u8; 32] = [0; 32];\n    let mut pub_key_y: [u8; 32] = [0; 32];\n\n    for i in 0..32 {\n        pub_key_x[i] = pub_key[i + 1];\n        pub_key_y[i] = pub_key[i + 32 + 1];\n    };\n\n    (pub_key_x, pub_key_y)\n}\n\nimpl PubKey {\n    fn from_xy(pub_x: [u8; 32], pub_y: [u8; 32]) -> PubKey {\n        PubKey {\n            pub_x,\n            pub_y,\n        }\n    }\n\n    fn from_unified(pub_key: [u8; 64]) -> PubKey {\n        let (key_x, key_y) = array_helpers::split_u8_64_unconstrained(pub_key);\n\n        PubKey {\n            pub_x: key_x,\n            pub_y: key_y,\n        }\n    }\n\n    fn from_uncompressed(pub_key: [u8; 65]) -> PubKey {\n        assert(pub_key[0] == 0x04);\n        let (key_x, key_y) = split_uncompressed_pub_key(pub_key);\n\n        PubKey {\n            pub_x: key_x,\n            pub_y: key_y,\n        }\n    }\n\n    fn verify_sig(self, signature: [u8; 64], hashed_message: [u8; 32]) -> bool {\n        std::ecdsa_secp256k1::verify_signature(self.pub_x, self.pub_y, signature, hashed_message)\n    }\n\n    fn to_eth_address(self) -> Field {\n        let pub_key = array_helpers::u8_32_to_u8_64_unconstrained(self.pub_x, self.pub_y);\n        let hashed_pub_key = std::hash::keccak256(pub_key, 64);\n\n        let mut addr: Field = 0;\n        for i in 0..20 {\n            // shift left by 8 and add the new value\n            addr = (addr * 256) + hashed_pub_key[i + 12] as Field;\n        }\n\n        addr\n    }\n\n    fn ecrecover(\n        self,\n        signature: [u8; 64],\n        hashed_message: [u8; 32]\n    ) -> Field {\n        assert(self.verify_sig(signature, hashed_message));\n\n        self.to_eth_address()\n    }\n}\n\n\n#[test]\nfn test_ecrecover_via_key() {\n    let pub_key_x = [131, 24, 83, 91, 84, 16, 93, 74, 122, 174, 96, 192, 143, 196, 95, 150, 135, 24, 27, 79, 223, 198, 37, 189, 26, 117, 63, 167, 57, 127, 237, 117];\n    let pub_key_y = [53, 71, 241, 28, 168, 105, 102, 70, 242, 243, 172, 176, 142, 49, 1, 106, 250, 194, 62, 99, 12, 93, 17, 245, 159, 97, 254, 245, 123, 13, 42, 165];\n    let signature = [57, 17, 112, 239, 241, 30, 64, 157, 170, 50, 85, 145, 156, 69, 226, 85, 147, 164, 10, 82, 71, 93, 42, 132, 200, 220, 161, 255, 95, 241, 211, 141, 81, 7, 150, 25, 25, 27, 162, 213, 80, 61, 12, 170, 50, 4, 154, 203, 252, 229, 119, 29, 202, 153, 50, 25, 126, 145, 245, 23, 136, 75, 29, 177];\n    let hashed_message = [13, 82, 120, 60, 76, 186, 215, 235, 175, 126, 185, 67, 252, 100, 143, 82, 130, 165, 32, 112, 68, 47, 193, 141, 141, 209, 109, 219, 47, 203, 175, 102];\n\n    let key = PubKey::from_xy(pub_key_x, pub_key_y);\n    assert(key.ecrecover(signature, hashed_message) == 0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266);\n}\n","path":"/home/turupawn/nargo/github.com/colinnielsen/ecrecover-noirv0.19.0/src/secp256k1.nr"},"3":{"source":"use dep::std;\n\nfn u8_32s_to_u64_16(\n    arr_a: [u8; 32],\n    arr_b: [u8; 32],\n) -> [u64; 16] {\n    let mut combined_u64: [u64; 16] = [0; 16];\n    \n    for i in 0..4 {\n        let mut value: u64 = 0;\n        for j in 0..8 {\n            value |= (arr_a[i*8+j] as u64) << ((56 - j*8) as u64);\n        }\n         combined_u64[i] = value;\n    }\n    for i in 4..8 {\n        let mut value: u64 = 0;\n        for j in 0..8 {\n            value |= (arr_b[(i-4)*8+j] as u64) << ((56 - j*8) as u64);\n        }\n         combined_u64[i] = value;\n    }\n\n    combined_u64\n}\n\nunconstrained\nfn u8_32s_to_u64_16_unconstrained(\n    arr_a: [u8; 32],\n    arr_b: [u8; 32],\n) -> [u64; 16] {\n    let mut combined_u64: [u64; 16] = [0; 16];\n    \n    for i in 0..4 {\n        let mut value: u64 = 0;\n        for j in 0..8 {\n            value |= (arr_a[i*8+j] as u64) << ((56 - j*8) as u64);\n        }\n         combined_u64[i] = value;\n    }\n    for i in 4..8 {\n        let mut value: u64 = 0;\n        for j in 0..8 {\n            value |= (arr_b[(i-4)*8+j] as u64) << ((56 - j*8) as u64);\n        }\n         combined_u64[i] = value;\n    }\n\n    combined_u64\n}\n\n#[test]\nfn test_u8_32s_to_u64_16() {\n    let arr_a: [u8; 32] = [\n        131,24,83,91,84,16,93,74,122,174,96,192,143,196,95,150,135,24,27,79,223,198,37,189,26,117,63,167,57,127,237,117\n    ];\n    let arr_b: [u8; 32] = [\n        53,71,241,28,168,105,102,70,242,243,172,176,142,49,1,106,250,194,62,99,12,93,17,245,159,97,254,245,123,13,42,165\n    ];\n    let out = u8_32s_to_u64_16(arr_a, arr_b);\n\n    assert(out[0] == 9446391870127103306);\n    assert(out[1] == 8840109498736861078);\n    assert(out[2] == 9734560624431998397);\n    assert(out[3] == 1906500004718046581);\n    assert(out[4] == 3839302312743495238);\n    assert(out[5] == 17506526050819047786);\n    assert(out[6] == 18069073250093961717);\n    assert(out[7] == 11484740855056378533);\n    assert(out[8] == 0);\n    assert(out[9] == 0);\n    assert(out[10] == 0);\n    assert(out[11] == 0);\n    assert(out[12] == 0);\n    assert(out[13] == 0);\n    assert(out[14] == 0);\n    assert(out[15] == 0);\n    // the above output is the hex \"0x8318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5\"\n}\n\nfn u8_32_to_u8_64(\n    arr_a: [u8; 32],\n    arr_b: [u8; 32],\n) -> [u8; 64] {\n    let mut combined: [u8; 64] = [0; 64];\n\n    for i in 0..32 {\n        combined[i] = arr_a[i];\n    }\n    for i in 0..32 {\n        combined[i + 32] = arr_b[i];\n    }\n\n    combined\n}\n\nunconstrained\nfn u8_32_to_u8_64_unconstrained(\n    arr_a: [u8; 32],\n    arr_b: [u8; 32],\n) -> [u8; 64] {\n    let mut combined: [u8; 64] = [0; 64];\n\n    for i in 0..32 {\n        combined[i] = arr_a[i];\n    }\n    for i in 0..32 {\n        combined[i + 32] = arr_b[i];\n    }\n\n    combined\n}\n\n\nfn u64_4_to_u8_32(\n    array: [u64; 4]\n) -> [u8; 32] {\n    let mut output: [u8; 32] = [0; 32];\n    let mut output_index = 0;\n\n    for num_idx in 0..4 {\n        for bit_pos in 0..8 {\n            let shift_amount: u64 = 56 - (bit_pos * 8) as u64;\n            output[output_index] = ((array[num_idx] >> shift_amount) & 255) as u8;\n            output_index += 1;\n        }\n    }\n\n    output\n}\n\nunconstrained\nfn u64_4_to_u8_32_unconstrained(\n    array: [u64; 4]\n) -> [u8; 32] {\n    let mut output: [u8; 32] = [0; 32];\n    let mut output_index = 0;\n\n    for num_idx in 0..4 {\n        for bit_pos in 0..8 {\n            let shift_amount: u64 = 56 - (bit_pos * 8) as u64;\n            output[output_index] = ((array[num_idx] >> shift_amount) & 255) as u8;\n            output_index += 1;\n        }\n    }\n\n    output\n}\n\n#[test]\nfn test_u64_4_to_u8_32() {\n    let hash: [u64; 4] = [\n        999647796417551690,\n        8840109498736861078,\n        9734560624431998397,\n        1906500004718046581\n    ];\n \n    let arr_out = u64_4_to_u8_32(hash);\n\n    assert(arr_out[0] == 13);\n    assert(arr_out[1] == 223);\n    assert(arr_out[2] == 118);\n    assert(arr_out[3] == 95);\n    assert(arr_out[4] == 221);\n    assert(arr_out[5] == 248);\n    assert(arr_out[6] == 93);\n    assert(arr_out[7] == 74);\n    assert(arr_out[8] == 122);\n    assert(arr_out[9] == 174);\n    assert(arr_out[10] == 96);\n    assert(arr_out[11] == 192);\n    assert(arr_out[12] == 143);\n    assert(arr_out[13] == 196);\n    assert(arr_out[14] == 95);\n    assert(arr_out[15] == 150);\n    assert(arr_out[16] == 135);\n    assert(arr_out[17] == 24);\n    assert(arr_out[18] == 27);\n    assert(arr_out[19] == 79);\n    assert(arr_out[20] == 223);\n    assert(arr_out[21] == 198);\n    assert(arr_out[22] == 37);\n    assert(arr_out[23] == 189);\n    assert(arr_out[24] == 26);\n    assert(arr_out[25] == 117);\n    assert(arr_out[26] == 63);\n    assert(arr_out[27] == 167);\n    assert(arr_out[28] == 57);\n    assert(arr_out[29] == 127);\n    assert(arr_out[30] == 237);\n    assert(arr_out[31] == 117);\n}\n\n/// @dev this method is used to convert a u8 array to a u160 (which is not supported by Noir, so it's represented as a Field)\n/// @dev will throw on Field overflow\nfn u8_to_u160(\n    array: [u8]\n) -> Field {\n    let mut addr: Field = 0;\n\n    for i in 0..20 {\n        // only take the last 20 bytes of the hash\n        addr = (addr * 256) + (array[i] as Field);\n    }\n\n    addr\n}\n\nunconstrained\nfn u8_to_u160_unconstrained(\n    array: [u8]\n) -> Field {\n    let mut addr: Field = 0;\n\n    for i in 0..20 {\n        // only take the last 20 bytes of the hash\n        addr = (addr * 256) + (array[i] as Field);\n    }\n\n    addr\n}\n\nfn u8_to_eth_address(\n    array: [u8]\n) -> Field {\n    u8_to_u160(array)\n}\n\nunconstrained\nfn u8_to_eth_address_unconstrained(\n    array: [u8]\n) -> Field {\n    u8_to_u160(array)\n}\n\n#[test]\nfn test_u8_32_to_u160() {\n    // keccak hash of hardhat 0 address pub key (0xc1ffd3cfee2d9e5cd67643f8f39fd6e51aad88f6f4ce6ab8827279cfffb92266) as u8 array\n    let hashed_pub_key = [\n        193,255,211,207,238,45,158,92,214,118,67,248,243,159,214,229,26,173,136,246,244,206,106,184,130,114,121,207,255,185,34,102\n    ];\n\n    let mut right_20_bytes: [u8] = [0; 20];\n    for i in 0..20 {\n        right_20_bytes[i] = hashed_pub_key[i + 12];\n    }\n\n    let addr = u8_to_u160(right_20_bytes);\n    let addr_aliased = u8_to_eth_address(right_20_bytes);\n\n    assert(addr == addr_aliased);\n    assert(addr == 0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266); // hardhat address 0\n}\n\nfn split_u8_64(\n    arr: [u8; 64]\n) -> ([u8; 32], [u8; 32]) {\n    let mut arr_a: [u8; 32] = [0; 32];\n    let mut arr_b: [u8; 32] = [0; 32];\n\n    for i in 0..32 {\n        arr_a[i] = arr[i];\n        arr_b[i] = arr[i + 32];\n    };\n\n    (arr_a, arr_b)\n}\n\nunconstrained\nfn split_u8_64_unconstrained(\n    arr: [u8; 64]\n) -> ([u8; 32], [u8; 32]) {\n    let mut arr_a: [u8; 32] = [0; 32];\n    let mut arr_b: [u8; 32] = [0; 32];\n\n    for i in 0..32 {\n        arr_a[i] = arr[i];\n        arr_b[i] = arr[i + 32];\n    };\n\n    (arr_a, arr_b)\n}\n\n#[test]\nfn test_split_u8_64() {\n    let u8_64 = [\n        193,255,211,207,238,45,158,92,214,118,67,248,243,159,214,229,26,173,136,246,244,206,106,184,130,114,121,207,255,185,34,102,\n        193,255,211,207,238,45,158,92,214,118,67,248,243,159,214,229,26,173,136,246,244,206,106,184,130,114,121,207,255,185,34,102\n    ];\n\n    let (arr_a, arr_b) = split_u8_64(u8_64);\n\n    for i in 0..32 {\n        assert(arr_a[i] == u8_64[i]);\n        assert(arr_b[i] == u8_64[i + 32]);\n    }\n}\n","path":"/home/turupawn/nargo/github.com/colinnielsen/noir-array-helpersv0.19.0/src/lib.nr"},"18":{"source":"impl Field {\n    pub fn to_le_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_le_bits(bit_size)\n    }\n    \n    pub fn to_be_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_be_bits(bit_size)\n    }\n\n    #[builtin(to_le_bits)]\n    fn __to_le_bits(_self: Self, _bit_size: u32) -> [u1] {}\n    \n    #[builtin(to_be_bits)]\n    fn __to_be_bits(_self: Self, _bit_size: u32) -> [u1] {}\n\n    pub fn to_le_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_le_radix(256, byte_size)\n    }\n\n    pub fn to_be_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_be_radix(256, byte_size)\n    }\n\n\n    pub fn to_le_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_le_radix(radix, result_len)\n    }\n\n    pub fn to_be_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_be_radix(radix, result_len)\n    }\n\n\n\n    // decompose `_self` into a `_result_len` vector over the `_radix` basis\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix(_self: Self, _radix: u32, _result_len: u32) -> [u8] {}\n    \n    #[builtin(to_be_radix)]\n    fn __to_be_radix(_self: Self, _radix: u32, _result_len: u32) -> [u8] {}\n\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b = exponent.to_le_bits(32);\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x ∈ {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub fn modulus_num_bits() -> Field {}\n\n#[builtin(modulus_be_bits)]\npub fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub fn modulus_le_bytes() -> [u8] {}\n// Convert a 32 byte array to a field element\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n","path":"std/field.nr"},"26":{"source":"mod poseidon;\nmod mimc;\n\n#[foreign(sha256)]\npub fn sha256<N>(_input: [u8; N]) -> [u8; 32] {}\n\n#[foreign(blake2s)]\npub fn blake2s<N>(_input: [u8; N]) -> [u8; 32] {}\n\nstruct PedersenPoint {\n   x : Field,\n   y : Field,\n}\n\npub fn pedersen_commitment<N>(input: [Field; N]) -> PedersenPoint {\n    pedersen_commitment_with_separator(input, 0)\n}\n\n#[foreign(pedersen_commitment)]\npub fn __pedersen_commitment_with_separator<N>(_input: [Field; N], _separator: u32) -> [Field; 2] {}\n\npub fn pedersen_commitment_with_separator<N>(input: [Field; N], separator: u32) -> PedersenPoint {\n    let values = __pedersen_commitment_with_separator(input, separator);\n    PedersenPoint { x: values[0], y: values[1] }\n}\n\npub fn pedersen_hash<N>(input: [Field; N]) -> Field {\n    pedersen_hash_with_separator(input, 0)\n}\n\n#[foreign(pedersen_hash)]\npub fn pedersen_hash_with_separator<N>(_input: [Field; N], _separator: u32) -> Field {}\n\npub fn hash_to_field<N>(_input: [Field; N]) -> Field {\n    let mut inputs_as_bytes = [];\n\n    for i in 0..N {\n        let input_bytes = _input[i].to_le_bytes(32);\n        for i in 0..32 {\n            inputs_as_bytes = inputs_as_bytes.push_back(input_bytes[i]);\n        }\n    }\n\n    let hashed_input = blake2s(inputs_as_bytes);\n    crate::field::bytes32_to_field(hashed_input)\n}\n\n#[foreign(keccak256)]\npub fn keccak256<N>(_input: [u8; N], _message_size: u32) -> [u8; 32] {}\n\n","path":"std/hash.nr"},"28":{"source":"// Regular merkle tree means a append-only merkle tree (Explain why this is the only way to have privacy and alternatives if you don't want it)\n// Currently we assume that it is a binary tree, so depth k implies a width of 2^k\n// XXX: In the future we can add an arity parameter\n// Returns the merkle root of the tree from the provided leaf, its hashpath, using a pedersen hash function.\npub fn compute_merkle_root<N>(leaf: Field, index: Field, hash_path: [Field; N]) -> Field {\n    let n = hash_path.len();\n    let index_bits = index.to_le_bits(n as u32);\n    let mut current = leaf;\n    for i in 0..n {\n        let path_bit = index_bits[i] as bool;\n        let (hash_left, hash_right) = if path_bit {\n            (hash_path[i], current)\n        } else {\n            (current, hash_path[i])\n        };\n        current = crate::hash::pedersen_hash([hash_left, hash_right]);\n    }\n    current\n}\n","path":"std/merkle.nr"}},"warnings":[]}